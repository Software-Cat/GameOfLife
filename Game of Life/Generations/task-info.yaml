type: edu
custom_name: stage2
files:
- name: src/life/Main.java
  visible: true
  text: |
    package life;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/GameOfLifeTest.java
  visible: false
  text: |
    import life.Main;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.SimpleTestCase;

    import java.util.List;

    public class GameOfLifeTest extends StageTest {
        public GameOfLifeTest() {
            super(Main.class);
        }

        @Override
        public List<SimpleTestCase> generate() {
            return List.of(
                new SimpleTestCase(
                    "4 4 0",
                    "OOOO\n" +
                        "O O \n" +
                        "   O\n" +
                        "OOO "
                ),

                new SimpleTestCase(
                    "8 1 10",
                    " O  OO  \n" +
                        "OO   OO \n" +
                        "O     O \n" +
                        "        \n" +
                        "  O     \n" +
                        "  O O   \n" +
                        "     OO \n" +
                        "O   OO O"
                ),

                new SimpleTestCase(
                    "10 10 100",
                    "          \n" +
                        "          \n" +
                        "    O     \n" +
                        "   O O    \n" +
                        "    O     \n" +
                        "          \n" +
                        "          \n" +
                        "          \n" +
                        "          \n" +
                        "          "
                ),

                new SimpleTestCase(
                    "4 4 10",
                    "    \n" +
                        "    \n" +
                        "    \n" +
                        "    "
                ),

                new SimpleTestCase(
                    "32 -1 0",
                    "   OOO  O O    OOOOOO O O     OO\n" +
                        "   OO O    OO  O  O   O    O  OO\n" +
                        " O OOO OOO  OO  OO  O O  OO  O  \n" +
                        " O O O O    O     OO O    OO OOO\n" +
                        " O O O    O OOOOO OOOOOOOOO O OO\n" +
                        "O OOOO  O OOO OOOO O  O   OOO O \n" +
                        "O  OO  O  O     O O OOOOOOOOO O \n" +
                        "     OO OO  O OOO   OOOOO OOOOOO\n" +
                        "  O OO        O O    O     OOOO \n" +
                        "OOOO  OO  OO    O O   OO OOOO  O\n" +
                        "   O         O   O   OOOOOO    O\n" +
                        "   OOOOO   OOOOOOO  O O  O OO O \n" +
                        " O O  OOO O O O  OO OO   OO    O\n" +
                        "O    O OOOOO O    OO  OO O  OOO \n" +
                        " OOOOO   O O      O  O  O  OOOOO\n" +
                        "OOO O  OOOO OOO OO  O OO    OO  \n" +
                        "  OOO  OO  OO  O OOO     O O  OO\n" +
                        "OOO  OOOOOOO OOO  OO  O  O   OO \n" +
                        "OO O O    OOO    O O  O OOOO O  \n" +
                        "O O   OO  O     O  O O  O O O   \n" +
                        "OOO       OOOO OOO O    OOOO  OO\n" +
                        "O  OO  OOO     OOOO  O    O  O O\n" +
                        "  O OO  O OO  OOOOO  O   O OOO  \n" +
                        "O    OO O   O   OO O   O O OOOO \n" +
                        " O OOO O OOOOOO O   O O  O  OOO \n" +
                        " OO OOO  O O O  OO OOOOOOOOO  O \n" +
                        " OOO OO  OO O O   OO  OOOO OOO  \n" +
                        " O O O  O OOO O  OO OO   O    OO\n" +
                        "OO O O OOO OO O     OO  O  O O  \n" +
                        " O O O O OO     OOOOO O   O  OOO\n" +
                        "OOOOO     OO   O    O    OO    O\n" +
                        " OOO OO  O   O OO  OO   OO   O  "
                ),

                new SimpleTestCase(
                    "64 0 512",
                    "                                                        OO      \n" +
                        "                          OO                           O  O   O \n" +
                        "                         O  O                           OO    O \n" +
                        "                          O O                                 O \n" +
                        "             OO            O                                    \n" +
                        "             O O                           O                    \n" +
                        "              O                            O                    \n" +
                        "                                           O                    \n" +
                        "                 OO                                             \n" +
                        "                 OO                    OOO                      \n" +
                        "                                                                \n" +
                        "       OO                                  O                    \n" +
                        "       OO                                  O                    \n" +
                        "                                           O                    \n" +
                        "                                                                \n" +
                        "                                                                \n" +
                        "                                                OO              \n" +
                        "                 O                              OO          O   \n" +
                        "                 O                                         O O  \n" +
                        "                 O                                         O  O \n" +
                        "                                                            OO  \n" +
                        "                                                                \n" +
                        "                                                                \n" +
                        "                                                                \n" +
                        "                                                                \n" +
                        "                                                                \n" +
                        "                                                                \n" +
                        "                                      OO                        \n" +
                        "                                     O  O                       \n" +
                        "                                      O O                       \n" +
                        "                                       O                        \n" +
                        "                                                                \n" +
                        "                                                                \n" +
                        "                              O                                 \n" +
                        "                             O O                                \n" +
                        "                             OO                                 \n" +
                        "     OOO          O                                             \n" +
                        "                  O                    OO                       \n" +
                        "                  O                    OO                       \n" +
                        "                                                                \n" +
                        "                                                                \n" +
                        "                                                                \n" +
                        "                                                     O          \n" +
                        "      OO                                            O O         \n" +
                        "      OO                     OO                     O O         \n" +
                        "                            O  O                     O          \n" +
                        "                             OO                                 \n" +
                        "          OO                                                    \n" +
                        "          OO                                                    \n" +
                        "                                                                \n" +
                        "                                            O                   \n" +
                        "                                  OO        O                   \n" +
                        "                                  OO    O   O                   \n" +
                        "                       OO               O                       \n" +
                        "                       OO               O                       \n" +
                        "                                                                \n" +
                        "                                                       OO       \n" +
                        "                                                O      OO       \n" +
                        "                                               O O              \n" +
                        "                                               O O              \n" +
                        "       OO                                       O               \n" +
                        "       OO                                                       \n" +
                        "                                                                \n" +
                        "                                                                "
                )
            );
        }
    }
  learner_created: false
- name: src/life/World.java
  visible: true
  text: |
    package life;

    public class World {
        private final int[][] LIVING_CHECK_DIRECTIONS = {
                {0, -1},
                {1, -1},
                {1, 0},
                {1, 1},
                {0, 1},
                {-1, 1},
                {-1, 0},
                {-1, -1},
        };

        private int worldSize;
        private boolean[][] grid;

        public World(boolean[][] initialGrid) {
            grid = initialGrid;
            worldSize = initialGrid.length;
        }

        public void printWorld() {
            for (boolean[] row : grid) {
                for (boolean state : row) {
                    if (state) {
                        System.out.print("O");
                    } else {
                        System.out.print(" ");
                    }
                }
                System.out.println();
            }
    //        for (int y = 0; y < worldSize; y++) {
    //            for (int x = 0; x < worldSize; x++) {
    //                System.out.print(getLivingNeighbours(x, y));
    //            }
    //            System.out.println();
    //        }
        }

        public boolean isLiving(int x, int y) {
            x = Math.floorMod(x, worldSize);
            y = Math.floorMod(y, worldSize);
            return grid[y][x];
        }

        public void setState(int x, int y, boolean state) {
            x = Math.floorMod(x, worldSize);
            y = Math.floorMod(y, worldSize);
            grid[y][x] = state;
        }

        public int getLivingNeighbours(int x, int y) {
            int livingCount = 0;

            for (int[] direction : LIVING_CHECK_DIRECTIONS) {
                if (isLiving(x + direction[0], y + direction[1])) {
                    livingCount++;
                }
            }

            return livingCount;
        }

        public void tick() {
            World nextTick = new World(new boolean[worldSize][worldSize]);

            for (int x = 0; x < worldSize; x++) {
                for (int y = 0; y < worldSize; y++) {
                    if (isLiving(x, y)) {
                        switch (getLivingNeighbours(x, y)) {
                            case 2:
                            case 3:
                                nextTick.setState(x, y, true);
                                return;
                            default:
                                nextTick.setState(x, y, false);
                                return;
                        }
                    } else {
                        if (getLivingNeighbours(x, y) == 3) {
                            nextTick.setState(x, y, true);
                        }
                    }
                }
            }

            this.grid = nextTick.grid;
        }
    }
  learner_created: true
- name: src/life/WorldGen.java
  visible: true
  text: |
    package life;

    import java.util.Random;

    public class WorldGen {
        private WorldGen() { }

        public static World genWorld(int worldSize, long seed) {
            boolean[][] initialGrid = new boolean[worldSize][worldSize];

            Random rng = new Random(seed);

            for (int i = 0; i < initialGrid.length; i++) {
                for (int j = 0; j < initialGrid[i].length; j++) {
                    initialGrid[i][j] = rng.nextBoolean();
                }
            }

            return new World(initialGrid);
        }
    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/54/stages/295/implement
status: Solved
feedback:
  message: Congratulations! Continue on <a href="https://hyperskill.org/projects/54/stages/295/implement">JetBrains
    Academy</a>
  time: Sat, 26 Sep 2020 04:58:29 UTC
record: 2
